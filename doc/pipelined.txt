Pipelined processors

Signals:
  SIG_PCWRITE   Not used
  SIG_PCSRC     0: PC = PC + 4
                1: PC = PC + 4 + (IAddr << 2)
                2: PC = Rs register value
                3: PC = PC[4] * (JAddr[26] << 2)
  SIG_IOD       Not used
  SIG_MEMREAD   0: -
                1: Read data memory
  SIG_MEMWRITE  0: -
                1: Write data memory
  SIG_IRWRITE   Not used
  SIG_MEM2REG   0: Write memory output
                1: Write ALU output
                2: Write PC value (for jal/jalr)
  SIG_REGDST    0: Rt register
                1: Rd register
                2: $ra register (for jal/jalr)
  SIG_REGWRITE  0: -
                1: Write registers bank
  SIG_REGBANK   0: Integer registers bank
                1: FP registers bank
  SIG_SELALUA   Not used
  SIG_SELALUB   Not used
                1: Write register
  SIG_ALUSRC    0: Rt value
                1: Imm field
  SIG_ALUOP     0: Sum
                1: Sub
                2: AluOp signal
  SIG_BRANCH    0: -
                1: Conditional branch
                2: J branch [TODO]
  CTRL_DIR      Not used


Syscalls: 1: Print integer $a0
          2: Print float $f12
          3: Print double $f12
          4: Print string addr($a0)
          5: Input integer -> $v0
          6: Input float -> $f0
          7: Input double -> $f0
          8: Input chars_to_read <- $a1, string -> addr($a0)
          9: Allocate $a0 Bytes in data memory. Returns address in $v0
          10: Exit program
          41: Random_integer $a0(seed) --> $a0
          42: Random_integer < $a1, $a0(seed) --> $a0
          43: Random_float $a0(seed) --> $f0
          44: Random_double $a0(seed) --> $f0
